/*
 * -------------------------------------------------
 *  APAeval Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

// Global default params, used in configs
params {

  // Options: Mandatory
  input                      = ''

  // Options: Custom config
  custom_config_version      = 'master'
  custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
  hostnames                  = [:]
  config_profile_description = ''
  config_profile_contact     = ''
  config_profile_url         = ''

  // Options: Other
  help                       = false
  outdir                     = './results'
  enable_conda               = false
  publish_dir_mode           = 'copy'
  tracedir                   = "${params.outdir}/pipeline_info"
  email                      = ''
  email_on_fail              = ''
  plaintext_email            = false
  monochrome_logs            = false
  name                       = ''
  clusterOptions             = ''

  // Defaults only, expecting to be overwritten
  max_memory                 = '128.GB'
  max_cpus                   = 16
  max_time                   = '240.h'

}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Uncomment line 49 to always run with docker
docker.enabled=true
// Uncomment line 51 to run with singularity
// singularity.enabled=true

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/execution_trace.txt"
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag.svg"
}

manifest {
  name = 'APAeval'
  author = 'Farica Zhuang'
  homePage = 'https://github.com/iRNA-COSI/APAeval'
  description = 'APAeval APAtrap workflow using nextflow'
  mainScript = 'main.nf'
  nextflowVersion = '!>=20.10.0'
  version = 'dev'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
